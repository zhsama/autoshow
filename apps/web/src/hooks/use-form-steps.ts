import { useFormStore } from '@/stores/form-store'

export function useWalletStep() {
  const {
    walletAddress,
    mnemonic,
    dashBalance,
    isLoading,
    error,
    setWalletAddress,
    setMnemonic,
    setDashBalance,
    setIsLoading,
    setError,
    setCurrentStep,
  } = useFormStore()
  
  return {
    walletAddress,
    mnemonic,
    dashBalance,
    isLoading,
    error,
    setWalletAddress,
    setMnemonic,
    setDashBalance,
    setIsLoading,
    setError,
    setCurrentStep,
  }
}

export function useProcessTypeStep() {
  const {
    processType,
    url,
    filePath,
    isLoading,
    error,
    walletAddress,
    setProcessType,
    setUrl,
    setFilePath,
    setFinalPath,
    setS3Url,
    setFrontMatter,
    setMetadata,
    setTranscriptionCosts,
    setIsLoading,
    setError,
    setCurrentStep,
    setShowNoteId,
  } = useFormStore()
  
  return {
    processType,
    url,
    filePath,
    isLoading,
    error,
    walletAddress,
    setProcessType,
    setUrl,
    setFilePath,
    setFinalPath,
    setS3Url,
    setFrontMatter,
    setMetadata,
    setTranscriptionCosts,
    setIsLoading,
    setError,
    setCurrentStep,
    setShowNoteId,
  }
}

export function useTranscriptionStep() {
  const {
    transcriptionService,
    transcriptionModel,
    transcriptionApiKey,
    transcriptionCosts,
    selectedPrompts,
    finalPath,
    s3Url,
    showNoteId,
    isLoading,
    error,
    setTranscriptionService,
    setTranscriptionModel,
    setTranscriptionApiKey,
    setTranscriptContent,
    setTranscriptionModelUsed,
    setTranscriptionCostUsed,
    setSelectedPrompts,
    setLlmCosts,
    setPromptText,
    setIsLoading,
    setError,
    setCurrentStep,
  } = useFormStore()
  
  return {
    transcriptionService,
    transcriptionModel,
    transcriptionApiKey,
    transcriptionCosts,
    selectedPrompts,
    finalPath,
    s3Url,
    showNoteId,
    isLoading,
    error,
    setTranscriptionService,
    setTranscriptionModel,
    setTranscriptionApiKey,
    setTranscriptContent,
    setTranscriptionModelUsed,
    setTranscriptionCostUsed,
    setSelectedPrompts,
    setLlmCosts,
    setPromptText,
    setIsLoading,
    setError,
    setCurrentStep,
  }
}

export function useLLMStep() {
  const {
    llmService,
    llmModel,
    llmApiKey,
    llmCosts,
    frontMatter,
    promptText,
    transcriptContent,
    transcriptionService,
    transcriptionModelUsed,
    transcriptionCostUsed,
    metadata,
    showNoteId,
    isLoading,
    error,
    setLlmService,
    setLlmModel,
    setLlmApiKey,
    setIsLoading,
    setError,
  } = useFormStore()
  
  return {
    llmService,
    llmModel,
    llmApiKey,
    llmCosts,
    frontMatter,
    promptText,
    transcript: transcriptContent,
    transcriptionService,
    transcriptionModelUsed,
    transcriptionCostUsed,
    metadata,
    showNoteId,
    isLoading,
    error,
    setLlmService,
    setLlmModel,
    setLlmApiKey,
    setIsLoading,
    setError,
  }
}